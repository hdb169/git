//void add_3hists_z4039(Int_t run11pos, Int_t run01pos, Int_t run012pos, Int_t run11neg, Int_t run01neg, Int_t run013neg){
double c = 299792458;//speed of light
double shms_length = 20.1; //distance for SHMS arm from fp to target
double t_e(double p){
  double m = 0.000511;
  //1e9 is for unit convert, s to ns
  return (shms_length*std::sqrt(p*p+m*m)*1e9)/(c*p);
}
double t_pi(double p){
  double m = 0.139;
  return (shms_length*std::sqrt(p*p+m*m)*1e9)/(c*p);
}
double t_K(double p){
  double m = 0.493;
  return (shms_length*std::sqrt(p*p+m*m)*1e9)/(c*p);
}
double t_proton(double p){
  double m = 0.938;
  return (shms_length*std::sqrt(p*p+m*m)*1e9)/(c*p);
}


void plot_rf_kaon_cont_fromfit(){

//void plot_rftime_eff(){
  /////////////////////////////////////for time of flight begin//////////////////
  double momentum = 2.24;

  // double momentum = 3.461;
  // std::cout<<"Enter your momentum :";
  // std::cin>>momentum;
  double tpi = t_pi(momentum)-t_e(momentum);
  double tk = t_K(momentum)-t_e(momentum);
  double tproton = t_proton(momentum)-t_e(momentum);
  cout<<"========================================================================================"<<endl;
  cout<< "time_pion = "<<tpi<< "   "<<"time_kaon = "<<tk<<"   "<<"time_proton = "<<tproton<<endl;
  cout<< "time of pion, kaon and proton rel. to pion in RF peak exactly at 1  = "  << 1+tpi-tpi<<"   " << 1+tk-tpi<<"   "<<1+tproton-tpi<<" Respectively "<<endl;
  cout<< "time of pion, kaon and proton rel. to pion in RF peak nearly  at 1  = "  << 1+tpi<<    "   " << 1+tk<<    "   "<<1+tproton<<    " Respectively "<<endl;
  cout<<"========================================================================================"<<endl;
  std::cout<<" time of flight compared to electrons,(pi,K,proton)" <<std::endl;
  std::cout<<tpi<<" "<<tk<<" "<<tproton<<std::endl;
  std::cout<<"te "<<t_e(momentum)<<std::endl;
  double momentum_low = 0.9*momentum;
  double momentum_high = 1.22*momentum;
  double tpi_low = t_pi(momentum_low)-t_e(momentum_low);
  double tpi_high = t_pi(momentum_high)-t_e(momentum_high);
  double tk_low = t_K(momentum_low)-t_e(momentum_low);
  double tk_high = t_K(momentum_high)-t_e(momentum_high);
  double tproton_low = t_proton(momentum_low)-t_e(momentum_low);
  double tproton_high = t_proton(momentum_high)-t_e(momentum_high);
  std::cout<<"time of flight range for pi "<<tpi_low<<" to " <<tpi_high<<std::endl;
  std::cout<<"time of flight range for k "<<tk_low<<" to " <<tk_high<<std::endl;
  std::cout<<"time of flight range for proton "<<tproton_low<<" to " <<tproton_high<<std::endl;
  std::cout<<"proton is "<<tproton_low-tpi_low<<" slower than pi for low momentum, "<<tproton_high-tpi_high<<" slower than pi for high momentum"<<std::endl;
  
  TLine *L_momentum_low = new TLine(momentum_low,0,momentum_low,10);
  TLine *L_momentum_high = new TLine(momentum_high,0,momentum_high,10);
  
  TF1 *fte = new TF1("te","t_e(x)-t_e(x)",1.5,6);
  TF1 *ftpi = new TF1("tpi","t_pi(x)-t_e(x)",1.5,6);
  TF1 *ftk = new TF1("tk","t_K(x)-t_e(x)",1.5,6);
  TF1 *ftproton = new TF1("tproton","t_proton(x)-t_e(x)",1.5,6);
  TCanvas *c = new TCanvas();
  gStyle->SetOptTitle(0);
  ftpi->GetYaxis()->SetRangeUser(0,10);
  ftpi->Draw();
  ftpi->GetXaxis()->SetTitle("shms_p");
  ftpi->GetYaxis()->SetTitle("ns");
  fte->SetLineColor(kBlack);  
  fte->Draw("same");
  ftk->SetLineColor(kOrange);
  ftk->Draw("same");
  ftproton->SetLineColor(kBlue);
  ftproton->Draw("same");
  L_momentum_low->Draw("same");
  L_momentum_high->Draw("same");
  //c->SetTitle("t_hardron - t_e");
  //  TPaveText *title = new TPaveText(.11,.95,.35,.99,"brndc");
  //  title->AddText("t_hardron - t_e");
  //  c->cd();
  //  title->Draw();
  TLegend *leg = c->BuildLegend(0.7,0.7,0.95,0.95);
  c->SaveAs("time_flight.pdf");
  //std::cout<<" if we set pi peak at 1, then position "<<std::endl;
  //std::cout<<fmod(t)

//void plot_rf_kaon_cont_fromfit(){

  // gStyle->SetOptStat(1000011);//int
   gStyle->SetOptFit(111);
   gStyle->SetOptStat(0);

    //#include "bin7808.h"
 										  
  TFile *f1 = new TFile("/home/hdbhatt/Desktop/data_simc/rad_dat_simc/kin33_34/kin7808/root_tree_new/charge_norm_data_hist_7808.root");//pip
  TFile *f2 = new TFile("/home/hdbhatt/Desktop/data_simc/rad_dat_simc/kin33_34/kin7808/root_tree_new/charge_norm_data_hist_7796.root");//pim

											  
  TH1D * hrf_pos = (TH1D*)f1->Get("rf_1dc");//data
  TH1D * hrf_neg = (TH1D*)f2->Get("rf_1dc");//data

 

  TCanvas *c1 = new TCanvas("c1","c1",1000, 500);
  c1->Divide(1,1);
  //num pos
  c1->cd(1);//gPad->SetGridx();gPad->SetGridy();
  hrf_pos->Draw("hist");
  hrf_pos->SetLineWidth(2);
  hrf_pos->GetXaxis()->SetTitle("rftime");
  hrf_pos->GetYaxis()->SetTitle("Counts");
  hrf_pos->SetTitle("Rf: Pos: 7808 : +3.46 GeV");
  hrf_pos->Draw("hist");


  // TF1 * g1 = new TF1("g1", "gaus(0)+gaus(3)", 0.5, 2.1);
  // TF1 * g2 = new TF1("g2", "gaus", 0.5, 2.1);
  // TF1 * g3 = new TF1("g3", "gaus", 0.5, 2.1);

  //for 3sigma (mean +/- 3sigma)
  TF1 * g1 = new TF1("g1", "gaus(0)+gaus(3)", 0, 2.1);//0.3644 to 1.6244
  TF1 * g2 = new TF1("g2", "gaus", 0., 2.1);
  TF1 * g3 = new TF1("g3", "gaus", 0., 2.1);

  
  Double_t parpos[] = {1193, 1, 0.217, 178, 1.63,0.217};

  g1->FixParameter(4,1.63);//fix 1.63 values
   g1->SetParameters(parpos);//took initial values
  
  hrf_pos->Fit(g1,"R");//does fit so as to have min chi2
  
  g1->GetParameters(&parpos[0]);//takes all 6 parmeters from fitted gaussian
  g2->SetParameters(&parpos[0]);//takes the first 3 parameters after fit
  g3->SetParameters(&parpos[3]);//takes the second 3 parameters after fit
  g1->Draw("same");
  g1->SetLineColor(kRed);
  g2->Draw("same");
  g2->SetLineColor(kBlack);
  g3->Draw("same");
  g3->SetLineColor(kBlue);

 
  Double_t kaon_int   =g3->Integral(0.5,1.5);
  Double_t pion_int   =g2->Integral(0.5,1.5);
  Double_t total_int  =g1->Integral(0.5,1.5);

  //for 3 sigma fit
  
  // Double_t kaon_int   =g3->Integral(0.3644,1.6244);
  // Double_t pion_int   =g2->Integral(0.3644,1.6244);
  // Double_t total_int  =g1->Integral(0.3644,1.6244);

  Double_t eff_pion = pion_int/total_int;
  Double_t kaon_cont = kaon_int/total_int;

  cout<<"===========================  "<<endl;
  cout<< " Run 7808 (3.461 GeV ) : RF Eff = "<< eff_pion <<"   "<< "Kaon Cont. = "<<   kaon_cont <<endl;
  cout<<"==========================="<<endl;

  ///for 3 sigma 




















    





  // TF1 * g1 = new TF1("g1", "gaus", 1.4, 1.8);

  // g1->SetParameter(0,167);
  // g1->SetParameter(1,1.67);
  // hrf_pos->Fit(g1,"R","",1,2);
  
  //g1->Draw("same");
  //g1->Draw("same");
  //hrf_pos->Draw("same");
  /* 
  TF1 * g1 = new TF1("g1", "gaus(0)+gaus(3)+pol1(6)", 0,50);
  Double_t parpos[] = {638, 11, 4.2, 38, 23, 7.35, 28.71, -0.589};
  g1->SetParameters(parpos);  
  hrf_pos->Fit(g1,"R","",0,50);
  g1->Draw("same");
  double efffitpos  =   g1->Integral(4,50)/g1->Integral(0,50);
  double effdatapos =  hrf_pos->Integral(hrf_pos->FindBin(4),hrf_pos->FindBin(50))/hrf_pos->Integral(hrf_pos->FindBin(0),hrf_pos->FindBin(50));
 
  cout<< "Eff pos ="<< efffitpos<<"  "<<effdatapos<<endl;
  cout<<"  "<<endl;
  */
 //num neg
  // c1->cd(2);//gPad->SetGridx();gPad->SetGridy();
  // hrf_neg->Draw("hist");
  // hrf_neg->SetLineWidth(2);
  // hrf_neg->GetXaxis()->SetTitle("rf");
  // hrf_neg->GetYaxis()->SetTitle("Counts");
  // hrf_neg->SetTitle("Rf: Neg: 7796 : -3.46 GeV");
  /*
  TF1 * g2 = new TF1("g2", "gaus(0)+gaus(3)+pol1(6)", 0,50);
  Double_t parneg[] = {638, 11, 4.2, 38, 23, 7.35, 28.71, -0.589};
  g2->SetParameters(parneg);  
  hrf_neg->Fit(g2,"R","",0,50);
  g2->Draw("same");
  double efffitneg  =   g2->Integral(4,50)/g2->Integral(0,50);
  double effdataneg =  hrf_neg->Integral(hrf_neg->FindBin(4),hrf_neg->FindBin(50))/hrf_neg->Integral(hrf_neg->FindBin(0),hrf_neg->FindBin(50));
 
  cout<< "Eff neg ="<< efffitneg<<"  "<<effdataneg<<endl;
  */  
  


  c1->SaveAs("pdf/plots_rf_kaon_cont_7808_7796.pdf");

  

}
 








