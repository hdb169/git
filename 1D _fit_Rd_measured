void plot22_dave_model(){
  double z[100];
  double R_D[100];
  double ratio[100];

  
  gStyle->SetOptStat(0);

  TFile * f1 = new TFile("new_x65/root/ratio_hist_x65.root");
  TFile * f2 = new TFile("x06_100bins/root/ratio_hist_x06.root");
  TFile * f3 = new TFile("x55_100bins/ratio_hist_x55.root");
  TFile * f4 = new TFile("x05_100bins/ratio_hist_x05.root");

  TFile * f5 = new TFile("final_plot.root","RECREATE");



  // Double_t binz = 100.0;
  // Double_t loz = 0.3;
  // Double_t hiz = 0.8;

  TH1D * h_x65 = (TH1D*)f1->Get("yield_ratio_x65");
  TH1D * h_x06 = (TH1D*)f2->Get("yield_ratio_x06");
  TH1D * h_x55 = (TH1D*)f3->Get("yield_ratio_x55");
  TH1D * h_x05 = (TH1D*)f4->Get("yield_ratio_x05");

  for (int i = 0; i < 100; i++)//taking all int numbers from 0 t0 1
    {
      z[i] = i/100.0;//made each number 0.1, 0.2, 0.3, ..
    
      R_D[i] = pow((1.0-z[i]),0.083583)/pow((1.0+z[i]),1.9838);

      ratio[i]=(4*R_D[i]+1)/(R_D[i]+4);

      //cout << z[i]<< endl;


    }
 
  TGraph *gr = new TGraph(100, z, ratio);

  //auto xaxis = gr->GetXaxis();
  //gr->GetXaxis()->SetRangeUser(0.1, 0.9);
 
  //auto axis = gr->GetYaxis();
  // gr->GetYaxis()->SetRangeUser(0., 1.0);



  TCanvas *c1 = new TCanvas ("c1", "Yield Ratio", 800, 500);

  c1->Divide(2,2);gPad->SetGrid();//gPad->SetGrid();
  c1 ->cd(1);//gPad->SetGrid();
  h_x65->Draw();
  gr->SetLineWidth(2);
  gr->SetLineColor(kRed);
  gr->Draw("same");
  h_x65->GetYaxis()->SetRangeUser(0,2.1);

  c1->cd(2);//gPad->SetGrid();
  h_x06->Draw();
  h_x06->GetYaxis()->SetRangeUser(0,2.1);
  gr->Draw("same");


  c1->cd(3);//gPad->SetGrid();
  h_x55->Draw();
  h_x55->GetYaxis()->SetRangeUser(0,2.1);
  gr->Draw("same");

  c1->cd(4);//gPad->SetGrid();
  h_x05->Draw();
  h_x05->GetYaxis()->SetRangeUser(0,2.1);
  gr->Draw("same");

  f5->Write();
  c1->SaveAs("final_plot_01.pdf");


}
//ratio=(4*R_D+1)/(R_D+4)

//where R_D is the ratio of unfavored to favored fragmentation functions 
//(D-/D+).

//In simc, we use a fit to HERMES data:

//R_D = (1.0-z)**0.083583/(1.0+z)**1.9838 
    
