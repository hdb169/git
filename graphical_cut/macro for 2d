#include "TH1F.h"
#include <TH2.h>
#include <TCanvas.h>
#include <TObject.h>
#define NRUNS 1
using namespace std;

void plot_2d(){

  Int_t runs[NRUNS] = {6545};
  TH2F *h1[NRUNS];
  TH2F *h2[NRUNS];
 TH2F *h3[NRUNS];
 TH2F *h4[NRUNS];

  TFile *f[NRUNS];
  TTree *t[NRUNS];
  TCanvas *c1[NRUNS];
  TCanvas *c2[NRUNS];

  //TCutG *mycutg;
  // mycutg = (TCutG*)gROOT->GetListOfSpecials()->FindObject("CUTG");
  // mycutg->SetName("mycutg");


  
   TCutG *cutg = new TCutG("cutg",9);
  cutg->SetVarX("P.cal.etottracknorm-P.cal.eprtracknorm");
  cutg->SetVarY("P.cal.eprtracknorm");
 
  cutg->SetPoint(0, 0.415392, 0.834294);
  cutg->SetPoint(1, 0.390353, 0.730081);
  cutg->SetPoint(2, 0.510182, 0.598443);
  cutg->SetPoint(3, 0.719434, 0.400987);
  cutg->SetPoint(4, 1.00559,  0.287175);
  cutg->SetPoint(5, 0.976082, 0.4051);
  cutg->SetPoint(6, 0.416286, 0.83018);
  cutg->SetPoint(7, 0.416286, 0.83018);
  cutg->SetPoint(8, 0.415392, 0.834294);


  
  for(Int_t i=0; i<NRUNS; i++){
    // f[i]=new TFile(Form("/lustre/expphy/volatile/hallc/spring17/hdbhatt/group/ROOTfiles/6545_test/coin_replay_production_%d_-1.root", runs[i]),"read");
        f[i]=new TFile(Form("coin_replay_production_%d_-1.root", runs[i]),"read");

    t[i]=(TTree *)f[i]->Get("T");


    h1[i] = new TH2F(Form("h1[%d]", i), Form(""),100, 0.001,0.9, 100, 0.001, 1.2);
    h1[i]->SetLineWidth(2);
    h1[i]->SetLineColor(kBlue);
    h1[i]->SetTitle(Form("-10<dp<20, 0.5<beta<1.5, aero>2, hgc>2, dipoleExit==0,  Run_%d",runs[i]));
    h1[i]->GetYaxis()->SetTitle("shms_shower");
    h1[i]->GetYaxis()->CenterTitle();
    h1[i]->GetXaxis()->SetTitle("shms_preshower");
    h1[i]->GetXaxis()->CenterTitle();
    h1[i]->GetXaxis()->SetTitleOffset(1.2);

    h2[i] = new TH2F(Form("h2[%d]", i), Form(""),100, 0.001,0.9, 100, 0.001, 1.2);
    h2[i]->SetLineWidth(2);
    h2[i]->SetLineColor(kBlue);
    h2[i]->SetTitle(Form("-10<dp<20, 0.5<beta<1.5, aero>2, hgc>2, dipleExit==1,  Run_%d",runs[i]));
    h2[i]->GetYaxis()->SetTitle("shms_shower");
    h2[i]->GetYaxis()->CenterTitle();
    h2[i]->GetXaxis()->SetTitle("shms_preshower");
    h2[i]->GetXaxis()->CenterTitle();
    h2[i]->GetXaxis()->SetTitleOffset(1.2);


    h3[i] = new TH2F(Form("h3[%d]", i), Form(""),100, -20,20, 100, -20,20);
    h3[i]->SetLineWidth(2);
    h3[i]->SetLineColor(kBlue);
    h3[i]->SetTitle(Form("with all events but pid cut Run_%d",runs[i]));
    h3[i]->GetYaxis()->SetTitle("P.dc.x_fp");
    h3[i]->GetYaxis()->CenterTitle();
    h3[i]->GetXaxis()->SetTitle("P.dc.y_fp");
    h3[i]->GetXaxis()->CenterTitle();
    h3[i]->GetXaxis()->SetTitleOffset(1.2);

    h4[i] = new TH2F(Form("h4[%d]", i), Form(""),100, -20,20, 100, -20,20);
    h4[i]->SetLineWidth(2);
    h4[i]->SetLineColor(kBlue);
    h4[i]->SetTitle(Form("with little right band only Run_%d",runs[i]));
    h4[i]->GetYaxis()->SetTitle("P.dc.x_fp");
    h4[i]->GetYaxis()->CenterTitle();
    h4[i]->GetXaxis()->SetTitle("P.dc.y_fp");
    h4[i]->GetXaxis()->CenterTitle();
    h4[i]->GetXaxis()->SetTitleOffset(1.2);

    gStyle->SetOptFit(1);
    c1[i] = new TCanvas(Form("c%d]", i),"",1500,1200);    
    c1[i]->Divide(2,2); 
    c1[i]->cd(1);gPad->SetGridx();gPad->SetGridy();gPad->SetLogz();


    // t[i]->Draw(Form("P.cal.etottracknorm-P.cal.eprtracknorm:P.cal.eprtracknorm>>h1[%d]", i ), "P.gtr.dp>-10 &&P.gtr.dp <20 && P.aero.npeSum>2&&P.hgcer.npeSum>2 && P.gtr.beta>0.5&& P.gtr.beta<1.5 &&P.dc.InsideDipoleExit==0","colz");

    // c1[i]->cd(2);gPad->SetGridx();gPad->SetGridy();gPad->SetLogz();
    // t[i]->Draw(Form("P.cal.etottracknorm-P.cal.eprtracknorm:P.cal.eprtracknorm>>h2[%d]", i ), "P.gtr.dp>-10 &&P.gtr.dp <20 && P.aero.npeSum>2&&P.hgcer.npeSum>2 && P.gtr.beta>0.5&& P.gtr.beta<1.5&&P.dc.InsideDipoleExit==1","colz");

    // c1[i]->SaveAs(Form("pdf/graphical_cut__%d.pdf",runs[i]));
   
    c2[i] = new TCanvas(Form("c%d]", i),"",1500,1200);    
    c2[i]->Divide(2,2);
    c2[i]->cd(1);gPad->SetGridx();gPad->SetGridy();gPad->SetLogz();
    t[i]->Draw(Form("P.cal.etottracknorm-P.cal.eprtracknorm:P.cal.eprtracknorm>>h1[%d]", i ), "P.gtr.dp>-10 &&P.gtr.dp <20 && P.aero.npeSum>2&&P.hgcer.npeSum>2 && P.gtr.beta>0.5&& P.gtr.beta<1.5&&P.dc.InsideDipoleExit==1","colz");

    c2[i]->cd(2);gPad->SetGridx();gPad->SetGridy();gPad->SetLogz();
    t[i]->Draw(Form("P.cal.etottracknorm-P.cal.eprtracknorm:P.cal.eprtracknorm>>h2[%d]", i ), " cutg","colz");

c2[i]->cd(3);gPad->SetGridx();gPad->SetGridy();gPad->SetLogz();
    t[i]->Draw(Form("P.dc.x_fp:P.dc.y_fp>>h3[%d]", i ), "P.gtr.dp>-10 &&P.gtr.dp <20 && P.aero.npeSum>2&&P.hgcer.npeSum>2 && P.gtr.beta>0.5&& P.gtr.beta<1.5&&P.dc.InsideDipoleExit==1 ","colz");


c2[i]->cd(4);gPad->SetGridx();gPad->SetGridy();gPad->SetLogz();
    t[i]->Draw(Form("P.dc.x_fp:P.dc.y_fp>>h4[%d]", i ), " cutg","colz");



    c2[i]->SaveAs(Form("pdf/graph_sh_vs_pshr_cut__%d.pdf",runs[i]));




  }


}
